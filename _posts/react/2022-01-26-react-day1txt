---
layout: single
title:  "React - 1일차"
folder: "script"

categories:
    - react
tags:
    - react 기본

author_profile: true
sidebar:
  nav: "side"
related: false

toc: true
toc_label: "목록"
toc_icon: "star"
toc_sticky: true
---

[참고한 블로그](https://moonsbeen.tistory.com/category/IT%20study/React)  

## 리액트 시작하기  
리액트 설치 후 새 리액트 프로젝트 생성하기

### 새 리액트 생성  
cmd창에서  
```
npx create-react-app [new-folder-name]
//새 리액트 생성

npm start
//리액트 실행
```

## 컴포넌트와 JSX  
컴포넌트는 리액트에서 앱을 이루는 최소 단위다.  

### 컴포넌트 생성  
[VScode를 열어 생성한 프로젝트의 src 디렉토리에 Hello.js 파일을 만든다.]  
[Hello.js 코드]  
```js
import React from 'react';
//리액트를 불러오는 코드

function Hello() {
    return <div>안녕하세요</div>;
}

export default Hello;
//코드를 Hello라는 이름의 컴포넌트로 내보냄
```

### 컴포넌트 사용  
[App.js 파일을 열어 코드를 작성한다.]  
[App.js 코드]  
```js
//기존에 있던 코드
import logo from './logo.svg';
import './App.css';

//추가한 코드
import React from 'react';
import Hello from './Hello';

function App() {
  return (
    <div>
      <Hello />
    </div> //화면에 "안녕하세요"가 표시된다.
  );
}

export default App;
```

### JSX  
JSX는 리액트의 생김새를 정의하는 JavaScript 문법이다.  
- 태그 사용시 꼭 닫혀있기

```js
function App() {
    return (
        <div>
            <Hello /> {/*오류가 발생하지 않는다*/}
            <Hello> {/*닫는 태그가 없어서 오류가 발생한다*/}
        </div>
    );
}
```

- 두개 이상의 태그는 꼭 하나의 태그로 감싸기

```js
function App() {
    return (
        <Hello />
        <div>안녕하세요</div>
    );
}
//오류 발생

function App() {
    return (
        <div>
            <Hello />
            <div>안녕하세요</div>
        </div>
    );
}
//정상 작동

function App() {
    return (
        <>
            <Hello />
            <div>안녕하세요</div>
        </>
    );
}
//<>, </> (Fragment)로 감싸도 된다
```

- JSX에서 JavaScript

```js
function App() {
  const name = 'react';
  return (
    <>
      <Hello />
      <div>{name}</div> {/*{}태그로 감싸서 보여줄 수 있다. */}
    </>
  );
}
```

## Props  
props는 부모 컴포넌트가 자식 컴포넌트에게 값을 전달할 때 사용한다.  
